This a python module for using Vimeo's API.

This fork is a third complete rewrite, including cutting down the code from
around 1000 lines to 200, making it a bit more pythonic, and ripping out
curl and oauth in favor of the newer oauth2 (which happens to wrap httplib2).
python-oauth2 can be found here (http://github.com/simplegeo/python-oauth2)
and should be the only requirement besides (httplib2) as of the last update to
this readme.

INSTALL
-------

Distutil's install hasn't been written yet and I wouldn't use anything that's
provided in the main branch's repo for this. Everything that you need is in
the "vimeo" folder, so just place that folder somewhere in your python path 
for now until I get a quick second to write up a setup file.

STATUS
------

As far as I know, everything in the Advanced API should work. You'll need to
provide your API key and secret. The module by default looks for it in settings.py
but change that to wherever you'd like. If you find anything that doesn't work
(or of course any bugs), please let me know!

The Uploading and oEmbed APIs are also now supported! Uploading makes use of
a very simple chunking procedure and an optional callback that you can use
(to for example do background uploading, build a progress bar, etc.). 

Again, if you encounter any API methods with unexpected behavior that you think
is due to one of these modules, please let me know (preferrably by filing a
ticket).

USAGE
-----

Advanced API methods flow through the VimeoClient class. Instantiate, then 
if you want to call API methods that require authentication, call the provided
get_request_token, get_authorization_url and get_access_token methods to do
the 3-legged authentication. Or if you already have an access token pass it in
to the VimeoClient constructor. 

(If you happen to be using this module with django or another web framework
like I am, the oauth2 docs have a quick example [using twitter which has the
same authorization process just about] that you can take a look at for 3-legged
authorization).

For unauthenticated API calls, you're good to go right after
instantiating.

To call API methods the syntax is easy: find the path to the method in the API
documentation, and call the method on the VimeoClient instance using the full 
path, separated by underscores (not periods!). Pass any parameters in by 
keyword. See the example:

To call the vimeo >> videos >> getInfo method:

    v = VimeoClient()
    v.vimeo_videos_getInfo(video_id="5775787")

You can control the output format of the response by either passing in a format
argument when initializing or by using the .default_response_property attr.
JSON might be the most convenient format to use as it'll get you a python dict
back, but XML might be a bit faster.

In general, see the docstrings which hopefully should be helpful, and when in 
doubt consult the Vimeo API docs as the behavior of this binding should follow
the API docs pretty closely. There are some things that I should have
documented better, hopefully I'll get a chance to get back to them, so for now,
check the wiki on github, I may have posted something helpful there, or if you
happen to be stuck, make a post looking for help.

CONTRIBUTORS (From the Original README)
------------

Bengt Sjölén
Marc Poulhiès (original module author)
mishk (this fork's rewrite)
